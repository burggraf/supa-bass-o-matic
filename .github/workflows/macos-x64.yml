name: "publish-macos-intel"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set environment variables
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "IDENTIFIER=$(node -p "require('./package.json').identifier")" >> $GITHUB_ENV    
          echo "DESCRIPTION=$(node -p "require('./package.json').description")" >> $GITHUB_ENV

      - name: Check environment variables
        run: |
          echo "ENV VERSION: ${{ env.VERSION }}"
          echo "ENV NAME: ${{ env.NAME }}"
          echo "ENV IDENTIFIER: ${{ env.IDENTIFIER }}"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.NAME }}-${{ env.VERSION }}
          releaseName: "${{ env.NAME }} ${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
          distPath: ./build
          bundleIdentifier: ${{ env.IDENTIFIER }}
          appName: "${{ env.NAME }}"
          appVersion: "${{ env.VERSION }}"

      - name: Locate and rename artifact
        run: |
          echo "Looking for DMG files in src-tauri/target..."
          find src-tauri/target -name "*.dmg" -type f
          echo "Looking for DMG files in target/release/bundle/dmg..."
          find target/release/bundle/dmg -name "*.dmg" -type f || true
          echo "Looking for DMG files in target/release/bundle/macos..."
          find target/release/bundle/macos -name "*.dmg" -type f || true
          # First try the new location
          if [ -d "target/release/bundle/dmg" ]; then
            find target/release/bundle/dmg -name "*.dmg" -exec mv {} ${{ env.NAME }}-${{ env.VERSION }}-macos-x64.dmg \;
          else
            # Fall back to the src-tauri location
            find src-tauri/target -name "*.dmg" -exec mv {} ${{ env.NAME }}-${{ env.VERSION }}-macos-x64.dmg \;
          fi
          echo "Final file check:"
          ls -la ${{ env.NAME }}-${{ env.VERSION }}-macos-x64.dmg || true

      - name: Get Release
        id: get_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.NAME }}-${{ env.VERSION }}-macos-x64.dmg
          asset_name: ${{ env.NAME }}-${{ env.VERSION }}-macos-x64.dmg
          asset_content_type: application/x-apple-diskimage
