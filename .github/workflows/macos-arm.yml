name: "publish-macos-arm"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set environment variables
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "IDENTIFIER=$(node -p "require('./package.json').identifier")" >> $GITHUB_ENV
          echo "DESCRIPTION=$(node -p "require('./package.json').description")" >> $GITHUB_ENV

      - name: Check environment variables
        run: |
          echo "ENV VERSION: ${{ env.VERSION }}"
          echo "ENV NAME: ${{ env.NAME }}"
          echo "ENV IDENTIFIER: ${{ env.IDENTIFIER }}"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ env.VERSION }}
          releaseName: "Version ${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          distPath: ./build
          bundleIdentifier: ${{ env.IDENTIFIER }}
          appName: "${{ env.NAME }}"
          appVersion: "${{ env.VERSION }}"

      - name: Locate and rename artifact
        run: |
          # Look in the architecture-specific bundle directory
          DMG_PATH="src-tauri/target/aarch64-apple-darwin/release/bundle/dmg"
          if [ -d "$DMG_PATH" ]; then
            echo "Found DMG directory at: $DMG_PATH"
            DMG_FILE=$(find "$DMG_PATH" -name "*.dmg" -type f | head -n 1)
            if [ -n "$DMG_FILE" ]; then
              echo "Found DMG file at: $DMG_FILE"
              mv "$DMG_FILE" "./${{ env.NAME }}-${{ env.VERSION }}-macos-arm.dmg"
              echo "Successfully renamed DMG file"
              exit 0
            fi
          fi
          
          echo "Error: No DMG file found"
          echo "Contents of target directory:"
          ls -R src-tauri/target/aarch64-apple-darwin/release/bundle || true
          exit 1

      - name: Get Release
        id: get_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.NAME }}-${{ env.VERSION }}-macos-arm.dmg
          asset_name: ${{ env.NAME }}-${{ env.VERSION }}-macos-arm.dmg
          asset_content_type: application/x-apple-diskimage
