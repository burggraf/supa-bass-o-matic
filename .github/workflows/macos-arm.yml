name: "publish-macos-arm"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set environment variables
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "IDENTIFIER=$(node -p "require('./package.json').identifier")" >> $GITHUB_ENV    
          echo "DESCRIPTION=$(node -p "require('./package.json').description")" >> $GITHUB_ENV

      - name: Check environment variables
        run: |
          echo "ENV VERSION: ${{ env.VERSION }}"
          echo "ENV NAME: ${{ env.NAME }}"
          echo "ENV IDENTIFIER: ${{ env.IDENTIFIER }}"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.NAME }}-${{ env.VERSION }}
          releaseName: "${{ env.NAME }} ${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          distPath: ./build
          bundleIdentifier: com.supabasecommunity.supabassomatic
          appName: "${{ env.NAME }}"
          appVersion: "${{ env.VERSION }}"
          artifactName: "${{ env.NAME }}-${{ env.VERSION }}-macos-arm"
          artifactPaths: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/**/*.app.tar.gz

      - name: Locate and rename artifact
        run: |
          find src-tauri/target -name "*.app.tar.gz" -exec mv {} ${{ env.NAME }}-${{ env.VERSION }}-macos-arm.app.tar.gz \;

      - name: Get Release URL
        id: get_release
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${{ env.NAME }}-${{ env.VERSION }}")
          echo "UPLOAD_URL=$(echo $response | jq -r .upload_url)" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./${{ env.NAME }}-${{ env.VERSION }}-macos-arm.app.tar.gz
          asset_name: ${{ env.NAME }}-${{ env.VERSION }}-macos-arm.app.tar.gz
          asset_content_type: application/gzip
