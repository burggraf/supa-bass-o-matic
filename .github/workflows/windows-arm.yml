name: "publish-windows-arm"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            target: "aarch64-pc-windows-msvc"
            args: "--target aarch64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          "VERSION=$(node -p "require('./package.json').version")" >> $env:GITHUB_ENV
          "NAME=$(node -p "require('./package.json').name")" >> $env:GITHUB_ENV
          "IDENTIFIER=$(node -p "require('./package.json').identifier")" >> $env:GITHUB_ENV    
          "DESCRIPTION=$(node -p "require('./package.json').description")" >> $env:GITHUB_ENV

      - name: Check environment variables
        run: |
          echo "ENV VERSION: ${{ env.VERSION }}"
          echo "ENV NAME: ${{ env.NAME }}"
          echo "ENV IDENTIFIER: ${{ env.IDENTIFIER }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc

      - name: Install Windows ARM64 target
        run: rustup target add aarch64-pc-windows-msvc

      - name: Install ImageMagick
        run: choco install imagemagick.app -y

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.NAME }}-${{ env.VERSION }}
          releaseName: "${{ env.NAME }} ${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
          distPath: ./build
          bundleIdentifier: com.supabasecommunity.supabassomatic
          appName: "${{ env.NAME }}"
          appVersion: "${{ env.VERSION }}"

      - name: Locate and rename artifact
        shell: pwsh
        run: |
          Get-ChildItem src-tauri\target -Recurse -Filter "*.msi" | ForEach-Object { Move-Item $_.FullName "${{ env.NAME }}-${{ env.VERSION }}-windows-arm.msi" }

      - name: Get Release URL
        id: get_release
        shell: pwsh
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/$env:GITHUB_REPOSITORY/releases/tags/${{ env.NAME }}-${{ env.VERSION }}" `
            -Headers @{
              "Accept" = "application/vnd.github+json"
              "Authorization" = "Bearer ${{ secrets.GITHUB_TOKEN }}"
              "X-GitHub-Api-Version" = "2022-11-28"
            }
          echo "UPLOAD_URL=$($response.upload_url)" >> $env:GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./${{ env.NAME }}-${{ env.VERSION }}-windows-arm.msi
          asset_name: ${{ env.NAME }}-${{ env.VERSION }}-windows-arm.msi
          asset_content_type: application/x-msi
